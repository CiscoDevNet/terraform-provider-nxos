// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccNxosPhysicalInterfaceVRF(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccNxosPhysicalInterfaceVRFPrerequisitesConfig + testAccNxosPhysicalInterfaceVRFConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("nxos_physical_interface_vrf.test", "interface_id", "eth1/10"),
					resource.TestCheckResourceAttr("nxos_physical_interface_vrf.test", "vrf_dn", "sys/inst-default"),
				),
			},
			{
				ResourceName:  "nxos_physical_interface_vrf.test",
				ImportState:   true,
				ImportStateId: "sys/intf/phys-[eth1/10]/rtvrfMbr",
			},
		},
	})
}

const testAccNxosPhysicalInterfaceVRFPrerequisitesConfig = `
resource "nxos_rest" "PreReq0" {
  dn = "sys/intf/phys-[eth1/10]"
  class_name = "l1PhysIf"
  content = {
      id = "eth1/10"
  }
}

`

func testAccNxosPhysicalInterfaceVRFConfig_minimum() string {
	return `
	resource "nxos_physical_interface_vrf" "test" {
		interface_id = "eth1/10"
		vrf_dn = "sys/inst-default"
  		depends_on = [nxos_rest.PreReq0, ]
	}
	`
}

func testAccNxosPhysicalInterfaceVRFConfig_all() string {
	return `
	resource "nxos_physical_interface_vrf" "test" {
		interface_id = "eth1/10"
		vrf_dn = "sys/inst-default"
  		depends_on = [nxos_rest.PreReq0, ]
	}
	`
}
