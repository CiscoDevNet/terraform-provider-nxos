// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/netascode/terraform-provider-nxos/internal/provider/helpers"
	"github.com/tidwall/gjson"
)

type BGPInstance struct {
	Device      types.String `tfsdk:"device"`
	Dn          types.String `tfsdk:"id"`
	AdminSt     types.String `tfsdk:"admin_state"`
	Asn         types.String `tfsdk:"asn"`
	EnhancedErr types.Bool   `tfsdk:"enhanced_error_handling"`
}

func (data BGPInstance) getDn() string {
	return "sys/bgp/inst"
}

func (data BGPInstance) getClassName() string {
	return "bgpInst"
}

func (data BGPInstance) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("adminSt", data.AdminSt.Value).
		Set("asn", data.Asn.Value).
		Set("enhancedErr", strconv.FormatBool(data.EnhancedErr.Value))
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *BGPInstance) fromBody(res gjson.Result) {
	data.AdminSt.Value = res.Get("*.attributes.adminSt").String()
	data.Asn.Value = res.Get("*.attributes.asn").String()
	data.EnhancedErr.Value = helpers.ParseNxosBoolean(res.Get("*.attributes.enhancedErr").String())
}

func (data *BGPInstance) fromPlan(plan BGPInstance) {
	data.Device = plan.Device
	data.Dn.Value = plan.Dn.Value
}
