// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
)

type OSPFArea struct {
	Device   types.String `tfsdk:"device"`
	Dn       types.String `tfsdk:"id"`
	Inst     types.String `tfsdk:"instance_name"`
	Name     types.String `tfsdk:"vrf_name"`
	Id       types.String `tfsdk:"area_id"`
	AuthType types.String `tfsdk:"authentication_type"`
	Cost     types.Int64  `tfsdk:"cost"`
	Type     types.String `tfsdk:"type"`
}

func (data OSPFArea) getDn() string {
	return fmt.Sprintf("sys/ospf/inst-[%s]/dom-[%s]/area-[%s]", data.Inst.ValueString(), data.Name.ValueString(), data.Id.ValueString())
}

func (data OSPFArea) getClassName() string {
	return "ospfArea"
}

func (data OSPFArea) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("id", data.Id.ValueString()).
		Set("authType", data.AuthType.ValueString()).
		Set("cost", strconv.FormatInt(data.Cost.ValueInt64(), 10)).
		Set("type", data.Type.ValueString())
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *OSPFArea) fromBody(res gjson.Result) {
	data.Id = types.StringValue(res.Get("*.attributes.id").String())
	data.AuthType = types.StringValue(res.Get("*.attributes.authType").String())
	data.Cost = types.Int64Value(res.Get("*.attributes.cost").Int())
	data.Type = types.StringValue(res.Get("*.attributes.type").String())
}

func (data *OSPFArea) fromPlan(plan OSPFArea) {
	data.Device = plan.Device
	data.Dn = plan.Dn
	data.Inst = plan.Inst
	data.Name = plan.Name
}
