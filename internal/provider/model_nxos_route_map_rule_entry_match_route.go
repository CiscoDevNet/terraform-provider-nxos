// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
	"github.com/netascode/terraform-provider-nxos/internal/provider/helpers"
)

type RouteMapRuleEntryMatchRoute struct {
	Device types.String `tfsdk:"device"`
	Dn types.String `tfsdk:"id"`
	Rtmap types.String `tfsdk:"rule_name"`
	Order types.Int64 `tfsdk:"order"`
}

func (data RouteMapRuleEntryMatchRoute) getDn() string {
	return fmt.Sprintf("sys/rpm/rtmap-[%s]/ent-[%v]/mrtdst", data.Rtmap.ValueString(), data.Order.ValueInt64())
}

func (data RouteMapRuleEntryMatchRoute) getClassName() string {
	return "rtmapMatchRtDst"
}

func (data RouteMapRuleEntryMatchRoute) toBody() nxos.Body {
	attrs := nxos.Body{}.
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *RouteMapRuleEntryMatchRoute) fromBody(res gjson.Result) {
}

func (data *RouteMapRuleEntryMatchRoute) fromPlan(plan RouteMapRuleEntryMatchRoute) {
	data.Device = plan.Device
	data.Dn = plan.Dn
	data.Rtmap = plan.Rtmap
	data.Order = plan.Order
}
