// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"

	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
)

type PhysicalInterface struct {
	Device                 types.String `tfsdk:"device"`
	Dn                     types.String `tfsdk:"id"`
	Id                     types.String `tfsdk:"interface_id"`
	FECMode                types.String `tfsdk:"fec_mode"`
	AccessVlan             types.String `tfsdk:"access_vlan"`
	AdminSt                types.String `tfsdk:"admin_state"`
	AutoNeg                types.String `tfsdk:"auto_negotiation"`
	Bw                     types.Int64  `tfsdk:"bandwidth"`
	Delay                  types.Int64  `tfsdk:"delay"`
	Descr                  types.String `tfsdk:"description"`
	Duplex                 types.String `tfsdk:"duplex"`
	Layer                  types.String `tfsdk:"layer"`
	LinkLog                types.String `tfsdk:"link_logging"`
	LinkDebounce           types.Int64  `tfsdk:"link_debounce_down"`
	LinkDebounceLinkUp     types.Int64  `tfsdk:"link_debounce_up"`
	Medium                 types.String `tfsdk:"medium"`
	Mode                   types.String `tfsdk:"mode"`
	Mtu                    types.Int64  `tfsdk:"mtu"`
	NativeVlan             types.String `tfsdk:"native_vlan"`
	Speed                  types.String `tfsdk:"speed"`
	SpeedGroup             types.String `tfsdk:"speed_group"`
	TrunkVlans             types.String `tfsdk:"trunk_vlans"`
	UniDirectionalEthernet types.String `tfsdk:"uni_directional_ethernet"`
	UserCfgdFlags          types.String `tfsdk:"user_configured_flags"`
}

func (data PhysicalInterface) getDn() string {
	return fmt.Sprintf("sys/intf/phys-[%s]", data.Id.ValueString())
}

func (data PhysicalInterface) getClassName() string {
	return "l1PhysIf"
}

func (data PhysicalInterface) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("id", data.Id.ValueString()).
		Set("FECMode", data.FECMode.ValueString()).
		Set("accessVlan", data.AccessVlan.ValueString()).
		Set("adminSt", data.AdminSt.ValueString()).
		Set("autoNeg", data.AutoNeg.ValueString()).
		Set("bw", strconv.FormatInt(data.Bw.ValueInt64(), 10)).
		Set("delay", strconv.FormatInt(data.Delay.ValueInt64(), 10)).
		Set("descr", data.Descr.ValueString()).
		Set("duplex", data.Duplex.ValueString()).
		Set("layer", data.Layer.ValueString()).
		Set("linkLog", data.LinkLog.ValueString()).
		Set("linkDebounce", strconv.FormatInt(data.LinkDebounce.ValueInt64(), 10)).
		Set("linkDebounceLinkUp", strconv.FormatInt(data.LinkDebounceLinkUp.ValueInt64(), 10)).
		Set("medium", data.Medium.ValueString()).
		Set("mode", data.Mode.ValueString()).
		Set("mtu", strconv.FormatInt(data.Mtu.ValueInt64(), 10)).
		Set("nativeVlan", data.NativeVlan.ValueString()).
		Set("speed", data.Speed.ValueString()).
		Set("speedGroup", data.SpeedGroup.ValueString()).
		Set("trunkVlans", data.TrunkVlans.ValueString()).
		Set("uniDirectionalEthernet", data.UniDirectionalEthernet.ValueString()).
		Set("userCfgdFlags", data.UserCfgdFlags.ValueString())
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *PhysicalInterface) fromBody(res gjson.Result) {
	data.Id = types.StringValue(res.Get("*.attributes.id").String())
	data.FECMode = types.StringValue(res.Get("*.attributes.FECMode").String())
	data.AccessVlan = types.StringValue(res.Get("*.attributes.accessVlan").String())
	data.AdminSt = types.StringValue(res.Get("*.attributes.adminSt").String())
	data.AutoNeg = types.StringValue(res.Get("*.attributes.autoNeg").String())
	data.Bw = types.Int64Value(res.Get("*.attributes.bw").Int())
	data.Delay = types.Int64Value(res.Get("*.attributes.delay").Int())
	data.Descr = types.StringValue(res.Get("*.attributes.descr").String())
	data.Duplex = types.StringValue(res.Get("*.attributes.duplex").String())
	data.Layer = types.StringValue(res.Get("*.attributes.layer").String())
	data.LinkLog = types.StringValue(res.Get("*.attributes.linkLog").String())
	data.LinkDebounce = types.Int64Value(res.Get("*.attributes.linkDebounce").Int())
	data.LinkDebounceLinkUp = types.Int64Value(res.Get("*.attributes.linkDebounceLinkUp").Int())
	data.Medium = types.StringValue(res.Get("*.attributes.medium").String())
	data.Mode = types.StringValue(res.Get("*.attributes.mode").String())
	data.Mtu = types.Int64Value(res.Get("*.attributes.mtu").Int())
	data.NativeVlan = types.StringValue(res.Get("*.attributes.nativeVlan").String())
	data.Speed = types.StringValue(res.Get("*.attributes.speed").String())
	data.SpeedGroup = types.StringValue(res.Get("*.attributes.speedGroup").String())
	data.TrunkVlans = types.StringValue(res.Get("*.attributes.trunkVlans").String())
	data.UniDirectionalEthernet = types.StringValue(res.Get("*.attributes.uniDirectionalEthernet").String())
	data.UserCfgdFlags = types.StringValue(res.Get("*.attributes.userCfgdFlags").String())
}

func (data *PhysicalInterface) fromPlan(plan PhysicalInterface) {
	data.Device = plan.Device
	data.Dn = plan.Dn
}
