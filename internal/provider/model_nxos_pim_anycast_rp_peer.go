// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
)

type PIMAnycastRPPeer struct {
	Device    types.String `tfsdk:"device"`
	Dn        types.String `tfsdk:"id"`
	Name      types.String `tfsdk:"vrf_name"`
	Addr      types.String `tfsdk:"address"`
	RpSetAddr types.String `tfsdk:"rp_set_address"`
}

func (data PIMAnycastRPPeer) getDn() string {
	return fmt.Sprintf("sys/pim/inst/dom-[%s]/acastrpfunc/peer-[%s]-peer-[%s]", data.Name.ValueString(), data.Addr.ValueString(), data.RpSetAddr.ValueString())
}

func (data PIMAnycastRPPeer) getClassName() string {
	return "pimAcastRPPeer"
}

func (data PIMAnycastRPPeer) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("addr", data.Addr.ValueString()).
		Set("rpSetAddr", data.RpSetAddr.ValueString())
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *PIMAnycastRPPeer) fromBody(res gjson.Result) {
	data.Addr = types.StringValue(res.Get("*.attributes.addr").String())
	data.RpSetAddr = types.StringValue(res.Get("*.attributes.rpSetAddr").String())
}

func (data *PIMAnycastRPPeer) fromPlan(plan PIMAnycastRPPeer) {
	data.Device = plan.Device
	data.Dn = plan.Dn
	data.Name = plan.Name
}
