// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"

	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/netascode/terraform-provider-nxos/internal/provider/helpers"
	"github.com/tidwall/gjson"
)

type PIMSSMRange struct {
	Device   types.String `tfsdk:"device"`
	Dn       types.String `tfsdk:"id"`
	Vrf_name types.String `tfsdk:"vrf_name"`
	GrpList  types.String `tfsdk:"group_list_1"`
	GrpList1 types.String `tfsdk:"group_list_2"`
	GrpList2 types.String `tfsdk:"group_list_3"`
	GrpList3 types.String `tfsdk:"group_list_4"`
	PfxList  types.String `tfsdk:"prefix_list"`
	RtMap    types.String `tfsdk:"route_map"`
	SsmNone  types.Bool   `tfsdk:"ssm_none"`
}

func (data PIMSSMRange) getDn() string {
	return fmt.Sprintf("sys/pim/inst/dom-[%s]/ssm/range", data.Vrf_name.Value)
}

func (data PIMSSMRange) getClassName() string {
	return "pimSSMRangeP"
}

func (data PIMSSMRange) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("grpList", data.GrpList.Value).
		Set("grpList1", data.GrpList1.Value).
		Set("grpList2", data.GrpList2.Value).
		Set("grpList3", data.GrpList3.Value).
		Set("pfxList", data.PfxList.Value).
		Set("rtMap", data.RtMap.Value).
		Set("ssmNone", strconv.FormatBool(data.SsmNone.Value))
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *PIMSSMRange) fromBody(res gjson.Result) {
	data.GrpList.Value = res.Get("*.attributes.grpList").String()
	data.GrpList1.Value = res.Get("*.attributes.grpList1").String()
	data.GrpList2.Value = res.Get("*.attributes.grpList2").String()
	data.GrpList3.Value = res.Get("*.attributes.grpList3").String()
	data.PfxList.Value = res.Get("*.attributes.pfxList").String()
	data.RtMap.Value = res.Get("*.attributes.rtMap").String()
	data.SsmNone.Value = helpers.ParseNxosBoolean(res.Get("*.attributes.ssmNone").String())
}

func (data *PIMSSMRange) fromPlan(plan PIMSSMRange) {
	data.Device = plan.Device
	data.Dn.Value = plan.Dn.Value
	data.Vrf_name.Value = plan.Vrf_name.Value
}
