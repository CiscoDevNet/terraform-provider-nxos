//go:build ignore
// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
)

type {{camelCase .Name}} struct {
	Dn types.String `tfsdk:"id"`
{{- range .Attributes}}
	{{toTitle .NxosName}} types.{{.Type}} `tfsdk:"{{.TfName}}"`
{{- end}}
}

func (data {{camelCase .Name}}) getDn() string {
{{- if hasId .Attributes}}
	return fmt.Sprintf("{{.Dn}}", data.{{toTitle (getIdNxosName .Attributes)}}.Value)
{{- else}}
	return {{.Dn}}
{{- end}}
}

func (data {{camelCase .Name}}) getClassName() string {
	return "{{.ClassName}}"
}

func (data {{camelCase .Name}}) toBody() nxos.Body {
	attrs := nxos.Body{}.
	{{- $lenAttr := len .Attributes}}
	{{- range $index, $item := .Attributes}}
		{{- if eq .Type "Int64"}}
		Set("{{.NxosName}}", strconv.Itoa(int(data.{{toTitle .NxosName}}.Value)))
		{{- else}}
		Set("{{.NxosName}}", data.{{toTitle .NxosName}}.Value)
		{{- end}}
		{{- if not (isLast $index $lenAttr)}}.{{- end}}
	{{- end}}
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *{{camelCase .Name}}) fromBody(res gjson.Result) {
	data.Dn.Value = res.Get("*.attributes.dn").String()
	{{- range .Attributes}}
	{{- if eq .Type "Int64"}}
	data.{{toTitle .NxosName}}.Value = res.Get("*.attributes.{{.NxosName}}").Int()
	{{- else}}
	data.{{toTitle .NxosName}}.Value = res.Get("*.attributes.{{.NxosName}}").String()
	{{- end}}
	{{- end}}
}
