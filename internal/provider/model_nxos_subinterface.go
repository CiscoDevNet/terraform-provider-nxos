// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
)

type Subinterface struct {
	Device     types.String `tfsdk:"device"`
	Dn         types.String `tfsdk:"id"`
	Id         types.String `tfsdk:"interface_id"`
	AdminSt    types.String `tfsdk:"admin_state"`
	Bw         types.Int64  `tfsdk:"bandwidth"`
	Delay      types.Int64  `tfsdk:"delay"`
	Descr      types.String `tfsdk:"description"`
	Encap      types.String `tfsdk:"encap"`
	LinkLog    types.String `tfsdk:"link_logging"`
	MediumType types.String `tfsdk:"medium"`
	Mtu        types.Int64  `tfsdk:"mtu"`
}

func (data Subinterface) getDn() string {
	return fmt.Sprintf("sys/intf/encrtd-[%s]", data.Id.ValueString())
}

func (data Subinterface) getClassName() string {
	return "l3EncRtdIf"
}

func (data Subinterface) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("id", data.Id.ValueString()).
		Set("adminSt", data.AdminSt.ValueString()).
		Set("bw", strconv.FormatInt(data.Bw.ValueInt64(), 10)).
		Set("delay", strconv.FormatInt(data.Delay.ValueInt64(), 10)).
		Set("descr", data.Descr.ValueString()).
		Set("encap", data.Encap.ValueString()).
		Set("linkLog", data.LinkLog.ValueString()).
		Set("mediumType", data.MediumType.ValueString()).
		Set("mtu", strconv.FormatInt(data.Mtu.ValueInt64(), 10))
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *Subinterface) fromBody(res gjson.Result) {
	data.Id = types.StringValue(res.Get("*.attributes.id").String())
	data.AdminSt = types.StringValue(res.Get("*.attributes.adminSt").String())
	data.Bw = types.Int64Value(res.Get("*.attributes.bw").Int())
	data.Delay = types.Int64Value(res.Get("*.attributes.delay").Int())
	data.Descr = types.StringValue(res.Get("*.attributes.descr").String())
	data.Encap = types.StringValue(res.Get("*.attributes.encap").String())
	data.LinkLog = types.StringValue(res.Get("*.attributes.linkLog").String())
	data.MediumType = types.StringValue(res.Get("*.attributes.mediumType").String())
	data.Mtu = types.Int64Value(res.Get("*.attributes.mtu").Int())
}

func (data *Subinterface) fromPlan(plan Subinterface) {
	data.Device = plan.Device
	data.Dn = plan.Dn
}
