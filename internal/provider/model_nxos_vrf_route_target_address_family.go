// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type VRFRouteTargetAddressFamily struct {
	Device                   types.String `tfsdk:"device"`
	Dn                       types.String `tfsdk:"id"`
	Vrf                      types.String `tfsdk:"vrf"`
	AddressFamily            types.String `tfsdk:"address_family"`
	RouteTargetAddressFamily types.String `tfsdk:"route_target_address_family"`
}

func (data VRFRouteTargetAddressFamily) getDn() string {
	return fmt.Sprintf("sys/inst-[%s]/dom-[%[1]s]/af-[%s]/ctrl-[%s]", data.Vrf.ValueString(), data.AddressFamily.ValueString(), data.RouteTargetAddressFamily.ValueString())
}

func (data VRFRouteTargetAddressFamily) getClassName() string {
	return "rtctrlAfCtrl"
}

func (data VRFRouteTargetAddressFamily) toBody() nxos.Body {
	body := ""
	body, _ = sjson.Set(body, data.getClassName()+".attributes", map[string]interface{}{})
	if (!data.RouteTargetAddressFamily.IsUnknown() && !data.RouteTargetAddressFamily.IsNull()) || true {
		body, _ = sjson.Set(body, data.getClassName()+".attributes."+"type", data.RouteTargetAddressFamily.ValueString())
	}

	return nxos.Body{body}
}

func (data *VRFRouteTargetAddressFamily) fromBody(res gjson.Result, all bool) {
	if !data.RouteTargetAddressFamily.IsNull() || all {
		data.RouteTargetAddressFamily = types.StringValue(res.Get(data.getClassName() + ".attributes.type").String())
	} else {
		data.RouteTargetAddressFamily = types.StringNull()
	}
}
