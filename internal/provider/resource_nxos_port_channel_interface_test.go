// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccNxosPortChannelInterface(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccNxosPortChannelInterfaceConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "interface_id", "po1"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "port_channel_mode", "active"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "minimum_links", "2"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "maximum_links", "10"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "suspend_individual", "disable"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "access_vlan", "vlan-1"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "admin_state", "up"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "auto_negotiation", "on"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "bandwidth", "0"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "delay", "10"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "description", "My Description"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "duplex", "auto"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "layer", "Layer2"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "link_logging", "enable"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "medium", "broadcast"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "mode", "access"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "mtu", "1500"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "native_vlan", "unknown"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "speed", "auto"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "trunk_vlans", "1-4094"),
					resource.TestCheckResourceAttr("nxos_port_channel_interface.test", "user_configured_flags", "admin_layer,admin_mtu,admin_state"),
				),
			},
			{
				ResourceName:  "nxos_port_channel_interface.test",
				ImportState:   true,
				ImportStateId: "sys/intf/aggr-[po1]",
			},
		},
	})
}

func testAccNxosPortChannelInterfaceConfig_minimum() string {
	return `
	resource "nxos_port_channel_interface" "test" {
		interface_id = "po1"
	}
	`
}

func testAccNxosPortChannelInterfaceConfig_all() string {
	return `
	resource "nxos_port_channel_interface" "test" {
		interface_id = "po1"
		port_channel_mode = "active"
		minimum_links = 2
		maximum_links = 10
		suspend_individual = "disable"
		access_vlan = "vlan-1"
		admin_state = "up"
		auto_negotiation = "on"
		bandwidth = 0
		delay = 10
		description = "My Description"
		duplex = "auto"
		layer = "Layer2"
		link_logging = "enable"
		medium = "broadcast"
		mode = "access"
		mtu = 1500
		native_vlan = "unknown"
		speed = "auto"
		trunk_vlans = "1-4094"
		user_configured_flags = "admin_layer,admin_mtu,admin_state"
	}
	`
}
