// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type RouteMapRuleEntrySetRegularCommunity struct {
	Device      types.String `tfsdk:"device"`
	Dn          types.String `tfsdk:"id"`
	RuleName    types.String `tfsdk:"rule_name"`
	Order       types.Int64  `tfsdk:"order"`
	Additive    types.String `tfsdk:"additive"`
	NoCommunity types.String `tfsdk:"no_community"`
	SetCriteria types.String `tfsdk:"set_criteria"`
}

func (data RouteMapRuleEntrySetRegularCommunity) getDn() string {
	return fmt.Sprintf("sys/rpm/rtmap-[%s]/ent-[%v]/sregcomm", data.RuleName.ValueString(), data.Order.ValueInt64())
}

func (data RouteMapRuleEntrySetRegularCommunity) getClassName() string {
	return "rtmapSetRegComm"
}

func (data RouteMapRuleEntrySetRegularCommunity) toBody() nxos.Body {
	body := ""
	body, _ = sjson.Set(body, data.getClassName()+".attributes", map[string]interface{}{})
	if (!data.Additive.IsUnknown() && !data.Additive.IsNull()) || true {
		body, _ = sjson.Set(body, data.getClassName()+".attributes."+"additive", data.Additive.ValueString())
	}
	if (!data.NoCommunity.IsUnknown() && !data.NoCommunity.IsNull()) || true {
		body, _ = sjson.Set(body, data.getClassName()+".attributes."+"noCommAttr", data.NoCommunity.ValueString())
	}
	if (!data.SetCriteria.IsUnknown() && !data.SetCriteria.IsNull()) || true {
		body, _ = sjson.Set(body, data.getClassName()+".attributes."+"setCriteria", data.SetCriteria.ValueString())
	}

	return nxos.Body{body}
}

func (data *RouteMapRuleEntrySetRegularCommunity) fromBody(res gjson.Result, all bool) {
	if !data.Additive.IsNull() || all {
		data.Additive = types.StringValue(res.Get(data.getClassName() + ".attributes.additive").String())
	} else {
		data.Additive = types.StringNull()
	}
	if !data.NoCommunity.IsNull() || all {
		data.NoCommunity = types.StringValue(res.Get(data.getClassName() + ".attributes.noCommAttr").String())
	} else {
		data.NoCommunity = types.StringNull()
	}
	if !data.SetCriteria.IsNull() || all {
		data.SetCriteria = types.StringValue(res.Get(data.getClassName() + ".attributes.setCriteria").String())
	} else {
		data.SetCriteria = types.StringNull()
	}
}
