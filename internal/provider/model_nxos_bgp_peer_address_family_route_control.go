// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type BGPPeerAddressFamilyRouteControl struct {
	Device        types.String `tfsdk:"device"`
	Dn            types.String `tfsdk:"id"`
	Asn           types.String `tfsdk:"asn"`
	Vrf           types.String `tfsdk:"vrf"`
	Address       types.String `tfsdk:"address"`
	AddressFamily types.String `tfsdk:"address_family"`
	Direction     types.String `tfsdk:"direction"`
	RouteMapName  types.String `tfsdk:"route_map_name"`
}

func (data BGPPeerAddressFamilyRouteControl) getDn() string {
	return fmt.Sprintf("sys/bgp/inst/dom-[%s]/peer-[%s]/af-[%s]/rtctrl-[%s]", data.Vrf.ValueString(), data.Address.ValueString(), data.AddressFamily.ValueString(), data.Direction.ValueString())
}

func (data BGPPeerAddressFamilyRouteControl) getClassName() string {
	return "bgpRtCtrlP"
}

func (data BGPPeerAddressFamilyRouteControl) toBody() nxos.Body {
	body := ""
	body, _ = sjson.Set(body, data.getClassName()+".attributes", map[string]interface{}{})
	if (!data.Direction.IsUnknown() && !data.Direction.IsNull()) || true {
		body, _ = sjson.Set(body, data.getClassName()+".attributes."+"direction", data.Direction.ValueString())
	}
	if (!data.RouteMapName.IsUnknown() && !data.RouteMapName.IsNull()) || true {
		body, _ = sjson.Set(body, data.getClassName()+".attributes."+"rtMap", data.RouteMapName.ValueString())
	}

	return nxos.Body{body}
}

func (data *BGPPeerAddressFamilyRouteControl) fromBody(res gjson.Result, all bool) {
	if !data.Direction.IsNull() || all {
		data.Direction = types.StringValue(res.Get(data.getClassName() + ".attributes.direction").String())
	} else {
		data.Direction = types.StringNull()
	}
	if !data.RouteMapName.IsNull() || all {
		data.RouteMapName = types.StringValue(res.Get(data.getClassName() + ".attributes.rtMap").String())
	} else {
		data.RouteMapName = types.StringNull()
	}
}
