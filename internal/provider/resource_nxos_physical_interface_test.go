// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccNxosPhysicalInterface(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config:testAccNxosPhysicalInterfaceConfig_minimum(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "interface_id", "eth1/10"),
				),
			},
			{
				Config:testAccNxosPhysicalInterfaceConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "interface_id", "eth1/10"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "fec_mode", "auto"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "access_vlan", "vlan-10"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "admin_state", "up"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "auto_negotiation", "on"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "bandwidth", "1000"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "delay", "10"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "description", "My Description"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "duplex", "auto"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "link_logging", "enable"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "medium", "broadcast"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "mode", "trunk"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "mtu", "9216"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "native_vlan", "vlan-10"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "speed", "auto"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "speed_group", "auto"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "trunk_vlans", "100-200,300"),
					resource.TestCheckResourceAttr("nxos_physical_interface.test", "uni_directional_ethernet", "disable"),
				),
			},
			{
				ResourceName:  "nxos_physical_interface.test",
				ImportState:   true,
				ImportStateId: "sys/intf/phys-[eth1/10]",
			},
		},
	})
}

func testAccNxosPhysicalInterfaceConfig_minimum() string {
	return `
	resource "nxos_physical_interface" "test" {
		interface_id = "eth1/10"
	}
	`
}

func testAccNxosPhysicalInterfaceConfig_all() string {
	return `
	resource "nxos_physical_interface" "test" {
		interface_id = "eth1/10"
		fec_mode = "auto"
		access_vlan = "vlan-10"
		admin_state = "up"
		auto_negotiation = "on"
		bandwidth = 1000
		delay = 10
		description = "My Description"
		duplex = "auto"
		link_logging = "enable"
		medium = "broadcast"
		mode = "trunk"
		mtu = 9216
		native_vlan = "vlan-10"
		speed = "auto"
		speed_group = "auto"
		trunk_vlans = "100-200,300"
		uni_directional_ethernet = "disable"
	}
	`
}
