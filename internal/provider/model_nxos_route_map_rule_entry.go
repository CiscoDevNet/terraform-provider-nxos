// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
)

type RouteMapRuleEntry struct {
	Device types.String `tfsdk:"device"`
	Dn     types.String `tfsdk:"id"`
	Rtmap  types.String `tfsdk:"rule_name"`
	Action types.String `tfsdk:"action"`
	Order  types.Int64  `tfsdk:"order"`
}

func (data RouteMapRuleEntry) getDn() string {
	return fmt.Sprintf("sys/rpm/rtmap-[%s]/ent-[%v]", data.Rtmap.ValueString(), data.Order.ValueInt64())
}

func (data RouteMapRuleEntry) getClassName() string {
	return "rtmapEntry"
}

func (data RouteMapRuleEntry) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("action", data.Action.ValueString()).
		Set("order", strconv.FormatInt(data.Order.ValueInt64(), 10))
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *RouteMapRuleEntry) fromBody(res gjson.Result) {
	data.Action = types.StringValue(res.Get("*.attributes.action").String())
	data.Order = types.Int64Value(res.Get("*.attributes.order").Int())
}

func (data *RouteMapRuleEntry) fromPlan(plan RouteMapRuleEntry) {
	data.Device = plan.Device
	data.Dn = plan.Dn
	data.Rtmap = plan.Rtmap
}
