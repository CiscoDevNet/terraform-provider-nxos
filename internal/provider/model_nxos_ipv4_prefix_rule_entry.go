// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
)

type IPv4PrefixRuleEntry struct {
	Device     types.String `tfsdk:"device"`
	Dn         types.String `tfsdk:"id"`
	Pfxlistv4  types.String `tfsdk:"rule_name"`
	Order      types.Int64  `tfsdk:"order"`
	Action     types.String `tfsdk:"action"`
	Criteria   types.String `tfsdk:"criteria"`
	Pfx        types.String `tfsdk:"prefix"`
	FromPfxLen types.Int64  `tfsdk:"from_range"`
	ToPfxLen   types.Int64  `tfsdk:"to_range"`
}

func (data IPv4PrefixRuleEntry) getDn() string {
	return fmt.Sprintf("sys/rpm/pfxlistv4-[%s]/ent-[%v]", data.Pfxlistv4.ValueString(), data.Order.ValueInt64())
}

func (data IPv4PrefixRuleEntry) getClassName() string {
	return "rtpfxEntry"
}

func (data IPv4PrefixRuleEntry) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("order", strconv.FormatInt(data.Order.ValueInt64(), 10)).
		Set("action", data.Action.ValueString()).
		Set("criteria", data.Criteria.ValueString()).
		Set("pfx", data.Pfx.ValueString()).
		Set("fromPfxLen", strconv.FormatInt(data.FromPfxLen.ValueInt64(), 10)).
		Set("toPfxLen", strconv.FormatInt(data.ToPfxLen.ValueInt64(), 10))
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *IPv4PrefixRuleEntry) fromBody(res gjson.Result) {
	data.Order = types.Int64Value(res.Get("*.attributes.order").Int())
	data.Action = types.StringValue(res.Get("*.attributes.action").String())
	data.Criteria = types.StringValue(res.Get("*.attributes.criteria").String())
	data.Pfx = types.StringValue(res.Get("*.attributes.pfx").String())
	data.FromPfxLen = types.Int64Value(res.Get("*.attributes.fromPfxLen").Int())
	data.ToPfxLen = types.Int64Value(res.Get("*.attributes.toPfxLen").Int())
}

func (data *IPv4PrefixRuleEntry) fromPlan(plan IPv4PrefixRuleEntry) {
	data.Device = plan.Device
	data.Dn = plan.Dn
	data.Pfxlistv4 = plan.Pfxlistv4
}
