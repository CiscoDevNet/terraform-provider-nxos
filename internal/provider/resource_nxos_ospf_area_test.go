// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccNxosOSPFArea(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccNxosOSPFConfig_all(),
			},
			{
				Config: testAccNxosOSPFConfig_all() + testAccNxosOSPFInstanceConfig_all(),
			},
			{
				Config: testAccNxosOSPFConfig_all() + testAccNxosOSPFInstanceConfig_all() + testAccNxosOSPFVRFConfig_all(),
			},
			{
				Config: testAccNxosOSPFConfig_all() + testAccNxosOSPFInstanceConfig_all() + testAccNxosOSPFVRFConfig_all() + testAccNxosOSPFAreaConfig_minimum(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "instance_name", "OSPF1"),
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "vrf_name", "default"),
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "area_id", "0.0.0.10"),
				),
			},
			{
				Config: testAccNxosOSPFConfig_all() + testAccNxosOSPFInstanceConfig_all() + testAccNxosOSPFVRFConfig_all() + testAccNxosOSPFAreaConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "instance_name", "OSPF1"),
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "vrf_name", "default"),
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "area_id", "0.0.0.10"),
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "authentication_type", "none"),
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "cost", "10"),
					resource.TestCheckResourceAttr("nxos_ospf_area.test", "type", "stub"),
				),
			},
			{
				ResourceName:  "nxos_ospf_area.test",
				ImportState:   true,
				ImportStateId: "sys/ospf/inst-[OSPF1]/dom-[default]/area-[0.0.0.10]",
			},
		},
	})
}

func testAccNxosOSPFAreaConfig_minimum() string {
	return `
	resource "nxos_ospf_area" "test" {
		instance_name = "OSPF1"
		vrf_name = "default"
		area_id = "0.0.0.10"
	}
	`
}

func testAccNxosOSPFAreaConfig_all() string {
	return `
	resource "nxos_ospf_area" "test" {
		instance_name = "OSPF1"
		vrf_name = "default"
		area_id = "0.0.0.10"
		authentication_type = "none"
		cost = 10
		type = "stub"
	}
	`
}
