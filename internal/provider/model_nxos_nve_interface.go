// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"strconv"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/netascode/terraform-provider-nxos/internal/provider/helpers"
	"github.com/tidwall/gjson"
)

type NVEInterface struct {
	Device                     types.String `tfsdk:"device"`
	Dn                         types.String `tfsdk:"id"`
	AdminSt                    types.String `tfsdk:"admin_state"`
	AdvertiseVmac              types.Bool   `tfsdk:"advertise_virtual_mac"`
	HoldDownTime               types.Int64  `tfsdk:"hold_down_time"`
	HostReach                  types.String `tfsdk:"host_reachability_protocol"`
	IngressReplProtoBGP        types.Bool   `tfsdk:"ingress_replication_protocol_bgp"`
	McastGroupL2               types.String `tfsdk:"multicast_group_l2"`
	McastGroupL3               types.String `tfsdk:"multicast_group_l3"`
	MultisiteBordergwInterface types.String `tfsdk:"multisite_source_interface"`
	SourceInterface            types.String `tfsdk:"source_interface"`
	SuppressARP                types.Bool   `tfsdk:"suppress_arp"`
	SuppressMacRoute           types.Bool   `tfsdk:"suppress_mac_route"`
}

func (data NVEInterface) getDn() string {
	return "sys/eps/epId-[1]"
}

func (data NVEInterface) getClassName() string {
	return "nvoEp"
}

func (data NVEInterface) toBody() nxos.Body {
	attrs := nxos.Body{}.
		Set("adminSt", data.AdminSt.Value).
		Set("advertiseVmac", strconv.FormatBool(data.AdvertiseVmac.Value)).
		Set("holdDownTime", strconv.FormatInt(data.HoldDownTime.Value, 10)).
		Set("hostReach", data.HostReach.Value).
		Set("ingressReplProtoBGP", strconv.FormatBool(data.IngressReplProtoBGP.Value)).
		Set("mcastGroupL2", data.McastGroupL2.Value).
		Set("mcastGroupL3", data.McastGroupL3.Value).
		Set("multisiteBordergwInterface", data.MultisiteBordergwInterface.Value).
		Set("sourceInterface", data.SourceInterface.Value).
		Set("suppressARP", strconv.FormatBool(data.SuppressARP.Value)).
		Set("suppressMacRoute", strconv.FormatBool(data.SuppressMacRoute.Value))
	return nxos.Body{}.SetRaw(data.getClassName()+".attributes", attrs.Str)
}

func (data *NVEInterface) fromBody(res gjson.Result) {
	data.AdminSt.Value = res.Get("*.attributes.adminSt").String()
	data.AdvertiseVmac.Value = helpers.ParseNxosBoolean(res.Get("*.attributes.advertiseVmac").String())
	data.HoldDownTime.Value = res.Get("*.attributes.holdDownTime").Int()
	data.HostReach.Value = res.Get("*.attributes.hostReach").String()
	data.IngressReplProtoBGP.Value = helpers.ParseNxosBoolean(res.Get("*.attributes.ingressReplProtoBGP").String())
	data.McastGroupL2.Value = res.Get("*.attributes.mcastGroupL2").String()
	data.McastGroupL3.Value = res.Get("*.attributes.mcastGroupL3").String()
	data.MultisiteBordergwInterface.Value = res.Get("*.attributes.multisiteBordergwInterface").String()
	data.SourceInterface.Value = res.Get("*.attributes.sourceInterface").String()
	data.SuppressARP.Value = helpers.ParseNxosBoolean(res.Get("*.attributes.suppressARP").String())
	data.SuppressMacRoute.Value = helpers.ParseNxosBoolean(res.Get("*.attributes.suppressMacRoute").String())
}

func (data *NVEInterface) fromPlan(plan NVEInterface) {
	data.Device = plan.Device
	data.Dn.Value = plan.Dn.Value
}
