# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: '1.16'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.3.3

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: |
          go build -v .

  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency: testing_environment
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.0'
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: '1.16'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.3.3

      - name: Get dependencies
        run: |
          go mod download

      - name: TF acceptance tests
        timeout-minutes: 10
        env:
          TF_ACC: '1'
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
          NXOS_USERNAME: ${{ secrets.NXOS_USERNAME }}
          NXOS_PASSWORD: ${{ secrets.NXOS_PASSWORD }}
          NXOS_URL: ${{ secrets.NXOS_URL }}
        run: |
          go test -v -cover ./internal/provider/
