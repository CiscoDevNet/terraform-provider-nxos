// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceNxosIPv4PrefixListRuleEntry(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceNxosIPv4PrefixListRuleEntryPrerequisitesConfig + testAccDataSourceNxosIPv4PrefixListRuleEntryConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.nxos_ipv4_prefix_list_rule_entry.test", "order", "10"),
					resource.TestCheckResourceAttr("data.nxos_ipv4_prefix_list_rule_entry.test", "action", "permit"),
					resource.TestCheckResourceAttr("data.nxos_ipv4_prefix_list_rule_entry.test", "criteria", "inexact"),
					resource.TestCheckResourceAttr("data.nxos_ipv4_prefix_list_rule_entry.test", "prefix", "192.168.1.0/24"),
					resource.TestCheckResourceAttr("data.nxos_ipv4_prefix_list_rule_entry.test", "from_range", "26"),
					resource.TestCheckResourceAttr("data.nxos_ipv4_prefix_list_rule_entry.test", "to_range", "32"),
				),
			},
		},
	})
}

const testAccDataSourceNxosIPv4PrefixListRuleEntryPrerequisitesConfig = `
resource "nxos_rest" "PreReq0" {
  dn = "sys/rpm/pfxlistv4-[RULE1]"
  class_name = "rtpfxRuleV4"
  content = {
      name = "RULE1"
  }
}

`

const testAccDataSourceNxosIPv4PrefixListRuleEntryConfig = `

resource "nxos_ipv4_prefix_list_rule_entry" "test" {
  rule_name = "RULE1"
  order = 10
  action = "permit"
  criteria = "inexact"
  prefix = "192.168.1.0/24"
  from_range = 26
  to_range = 32
  depends_on = [nxos_rest.PreReq0, ]
}

data "nxos_ipv4_prefix_list_rule_entry" "test" {
  rule_name = "RULE1"
  order = 10
  depends_on = [nxos_ipv4_prefix_list_rule_entry.test]
}
`
