// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceNxosOSPFVRF(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceNxosOSPFVRFPrerequisitesConfig + testAccDataSourceNxosOSPFVRFConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.nxos_ospf_vrf.test", "name", "VRF1"),
					resource.TestCheckResourceAttr("data.nxos_ospf_vrf.test", "admin_state", "enabled"),
					resource.TestCheckResourceAttr("data.nxos_ospf_vrf.test", "bandwidth_reference", "400000"),
					resource.TestCheckResourceAttr("data.nxos_ospf_vrf.test", "banwidth_reference_unit", "mbps"),
					resource.TestCheckResourceAttr("data.nxos_ospf_vrf.test", "distance", "110"),
					resource.TestCheckResourceAttr("data.nxos_ospf_vrf.test", "router_id", "34.56.78.90"),
				),
			},
		},
	})
}

const testAccDataSourceNxosOSPFVRFPrerequisitesConfig = `
resource "nxos_rest" "PreReq0" {
  dn = "sys/ospf"
  class_name = "ospfEntity"
  content = {
  }
}

resource "nxos_rest" "PreReq1" {
  dn = "sys/ospf/inst-[OSPF1]"
  class_name = "ospfInst"
  content = {
      name = "OSPF1"
  }
  depends_on = [nxos_rest.PreReq0, ]
}

`

const testAccDataSourceNxosOSPFVRFConfig = `

resource "nxos_ospf_vrf" "test" {
  instance_name = "OSPF1"
  name = "VRF1"
  admin_state = "enabled"
  bandwidth_reference = 400000
  banwidth_reference_unit = "mbps"
  distance = 110
  router_id = "34.56.78.90"
  depends_on = [nxos_rest.PreReq0, nxos_rest.PreReq1, ]
}

data "nxos_ospf_vrf" "test" {
  instance_name = "OSPF1"
  name = "VRF1"
  depends_on = [nxos_ospf_vrf.test]
}
`
