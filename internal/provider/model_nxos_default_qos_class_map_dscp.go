// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netascode/go-nxos"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type DefaultQOSClassMapDSCP struct {
	Device       types.String `tfsdk:"device"`
	Dn           types.String `tfsdk:"id"`
	ClassMapName types.String `tfsdk:"class_map_name"`
	Value        types.String `tfsdk:"value"`
}

func (data DefaultQOSClassMapDSCP) getDn() string {
	return fmt.Sprintf("sys/ipqos/dflt/c/name-[%s]/dscp-[%v]", data.ClassMapName.ValueString(), data.Value.ValueString())
}

func (data DefaultQOSClassMapDSCP) getClassName() string {
	return "ipqosDscp"
}

func (data DefaultQOSClassMapDSCP) toBody() nxos.Body {
	body := ""
	body, _ = sjson.Set(body, data.getClassName()+".attributes", map[string]interface{}{})
	if (!data.Value.IsUnknown() && !data.Value.IsNull()) || true {
		body, _ = sjson.Set(body, data.getClassName()+".attributes."+"val", data.Value.ValueString())
	}

	return nxos.Body{body}
}

func (data *DefaultQOSClassMapDSCP) fromBody(res gjson.Result, all bool) {
	if !data.Value.IsNull() || all {
		data.Value = types.StringValue(res.Get(data.getClassName() + ".attributes.val").String())
	} else {
		data.Value = types.StringNull()
	}
}
